package com.navteq.lbsp.ctg.trapster.modules.udb.domain;

/*
 * These fields and methods were generated by the MyBatis Generator from the udb
 * table
 */
import java.util.Date;
import java.util.GregorianCalendar;


public class Udb
{
	
	/**
	 * This field corresponds to the database column udb.id
	 * 
	 */
	private Long	id;

	/**
	 * This field corresponds to the database column udb.name
	 * 
	 */
	private String	name;

	/**
	 * This field corresponds to the database column udb.uname
	 * 
	 */
	private String	uname;

	/**
	 * This field corresponds to the database column udb.pwd
	 * 
	 */
	private String	pwd;

	/**
	 * This field corresponds to the database column udb.new_password
	 * 
	 */
	private String	new_Password;

	/**
	 * This field corresponds to the database column udb.m_password
	 * 
	 */
	private String	m_Password;

	/**
	 * This field corresponds to the database column udb.level
	 * 
	 */
	private Integer	level;

	/**
	 * This field corresponds to the database column udb.info
	 * 
	 */
	private String	info;

	/**
	 * This field corresponds to the database column udb.aradius
	 * 
	 */
	private Double	aradius;

	/**
	 * This field corresponds to the database column udb.alert
	 * 
	 */
	private String	alert;

	/**
	 * This field corresponds to the database column udb.signupdate
	 * 
	 */
	private Date	signupdate;

	/**
	 * This field corresponds to the database column udb.lastvotetime
	 * 
	 */
	private Date	lastvotetime;

	/**
	 * This field corresponds to the database column udb.numvotes
	 * 
	 */
	private Integer	numvotes;

	/**
	 * This field corresponds to the database column udb.karma
	 * 
	 */
	private Integer	karma;

	/**
	 * This field corresponds to the database column udb.agreed
	 * 
	 */
	private String	agreed;

	/**
	 * This field corresponds to the database column udb.tgpref
	 * 
	 */
	private String	tgpref;

	/**
	 * This field corresponds to the database column udb.pmpref
	 * 
	 */
	private String	pmpref;

	/**
	 * This field corresponds to the database column udb.pmsmsaddr
	 * 
	 */
	private String	pmsmsaddr;

	/**
	 * This field corresponds to the database column udb.global_moderator
	 * 
	 */
	private Integer	global_moderator;

	/**
	 * This field corresponds to the database column udb.logged_site
	 * 
	 */
	private String	logged_site;

	/**
	 * This field corresponds to the database column udb.newsletter
	 * 
	 */
	private String	newsletter;

	/**
	 * This field corresponds to the database column udb.email_conf
	 * 
	 */
	private String	email_conf;

	/**
	 * This field corresponds to the database column udb.status
	 * 
	 */
	private String	status;

	/**
	 * This field corresponds to the database column udb.lastkarma
	 * 
	 */
	private Integer	lastkarma;

	/**
	 * This field corresponds to the database column udb.sip
	 * 
	 */
	private String	sip;

	/**
	 * This field corresponds to the database column udb.loginfailures
	 * 
	 */
	private Integer	loginfailures;

	/**
	 * This field corresponds to the database column udb.modapplydate
	 * 
	 */
	private Date	modapplydate;

	/**
	 * This field corresponds to the database column udb.lastapitime
	 * 
	 */
	private Date	lastapitime;

	/**
	 * This field corresponds to the database column udb.lastwebtime
	 * 
	 */
	private Date	lastwebtime;

	/**
	 * This field corresponds to the database column udb.confirmdate
	 * 
	 */
	private Date	confirmdate;

	/**
	 * This field corresponds to the database column udb.confirmmethod
	 * 
	 */
	private String	confirmmethod;
	
	
	//
	public Udb(UdbPopulatorType udbPopulaterType){
		
		if(udbPopulaterType.equals(UdbPopulatorType.DEMO_USER)){
			setToDemo();
		}
	}
	
	
	public Udb() {
		//make defaults for DEMO_USER
		setToDemo();
		
	}
	
	private void setToDemo() {
		id = 1L;
		name= "demo";
		uname= "demo-no-email";
		pwd= "";
		new_Password= "xxxxxxxxx";
		m_Password= "xxxxxxxxxx";
		level= 0;
		info= "";
		aradius= 0.01;
		numvotes= 0;
		karma= -1;
		agreed= "Y";
		tgpref= "A";
		pmpref= "Y";
		pmsmsaddr= "";
		global_moderator= 0;
		logged_site= "Y";
		newsletter= "Y";
		email_conf= "O";
		status= "A";
		lastkarma= -1;
		sip= "N";
		loginfailures= 0;
		
	}


	/**
	 * Constructor for subclasses
	 * @param user
	 */
	public Udb(Udb user) {
		id = user.getId();
		name= user.getName();
		uname= user.getUname();
		pwd= user.getPwd();
		new_Password= user.getNewPassword();
		m_Password= user.getmPassword();
		level= user.getLevel();
		info= user.getInfo();
		aradius= user.getAradius();
		alert= user.getAlert();
		signupdate= user.getSignupdate();
		lastvotetime= user.getLastvotetime();
		numvotes= user.getNumvotes();
		karma= user.getKarma();
		agreed= user.getAgreed();
		tgpref= user.getTgpref();
		pmpref= user.getPmpref();
		pmsmsaddr= user.getPmsmsaddr();
		global_moderator= user.getGlobalModerator();
		logged_site= user.getLoggedSite();
		newsletter= user.getNewsletter();
		email_conf= user.getEmailConf();
		status= user.getStatus();
		lastkarma= user.getLastkarma();
		sip= user.getSip();
		loginfailures= user.getLoginfailures();
		modapplydate= user.getModapplydate();
		lastapitime= user.getLastapitime();
		lastwebtime= user.getLastwebtime();
		confirmdate= user.getConfirmdate();
		confirmmethod= user.getConfirmmethod();
}
	
	
	
	

	public boolean isActive()
	{
		return UdbConstants.STATUS_ACTIVE.equals(status);
	}

	public boolean isDisabled()
	{
		return UdbConstants.STATUS_DISABLED.equals(status);
	}

	public boolean isNewbie()
	{
		return (System.currentTimeMillis() - signupdate.getTime()) <= 86400000;
	}

	public boolean isPreviouslyQuarantined()
	{
		return UdbConstants.STATUS_PREVIOUSLY_QUARANTINED.equals(status);
	}

	public boolean isProbation()
	{
		return UdbConstants.STATUS_PROBATION.equals(status);
	}
	
	public boolean isQuarantined()
	{
		return UdbConstants.STATUS_QUARANTINED.equals(status);
	}
	
	public boolean isUnconfirmed()
	{
		return UdbConstants.STATUS_UNCONFIRMED.equals(status);
	}
	
	//

	/**
	 * @return the value of udb.id
	 * 
	 */
	public Long getId()
	{
		return id;
	}

	/**
	 * @param id
	 *            the value for udb.id
	 * 
	 */
	public void setId(Long id)
	{
		this.id= id;
	}

	/**
	 * @return the value of udb.name
	 * 
	 */
	public String getName()
	{
		return name;
	}

	/**
	 * @param name
	 *            the value for udb.name
	 * 
	 */
	public void setName(String name)
	{
		this.name= name;
	}

	/**
	 * @return the value of udb.uname
	 * 
	 */
	public String getUname()
	{
		return uname;
	}

	/**
	 * @param uname
	 *            the value for udb.uname
	 * 
	 */
	public void setUname(String uname)
	{
		this.uname= uname;
	}

	/**
	 * @return the value of udb.pwd
	 * 
	 */
	public String getPwd()
	{
		return pwd;
	}

	/**
	 * @param pwd
	 *            the value for udb.pwd
	 * 
	 */
	public void setPwd(String pwd)
	{
		this.pwd= pwd;
	}

	/**
	 * @return the value of udb.new_password
	 * 
	 */
	public String getNewPassword()
	{
		return new_Password;
	}

	/**
	 * @param new_Password
	 *            the value for udb.new_password
	 * 
	 */
	public void setNewPassword(String newPassword)
	{
		this.new_Password= newPassword;
	}

	/**
	 * @return the value of udb.m_password
	 * 
	 */
	public String getmPassword()
	{
		return m_Password;
	}

	/**
	 * @param m_Password
	 *            the value for udb.m_password
	 * 
	 */
	public void setmPassword(String mPassword)
	{
		this.m_Password= mPassword;
	}

	/**
	 * @return the value of udb.level
	 * 
	 */
	public Integer getLevel()
	{
		return level;
	}

	/**
	 * @param level
	 *            the value for udb.level
	 * 
	 */
	public void setLevel(Integer level)
	{
		this.level= level;
	}

	/**
	 * @return the value of udb.info
	 * 
	 */
	public String getInfo()
	{
		return info;
	}

	/**
	 * @param info
	 *            the value for udb.info
	 * 
	 */
	public void setInfo(String info)
	{
		this.info= info;
	}

	/**
	 * @return the value of udb.aradius
	 * 
	 */
	public Double getAradius()
	{
		return aradius;
	}

	/**
	 * @param aradius
	 *            the value for udb.aradius
	 * 
	 */
	public void setAradius(Double aradius)
	{
		this.aradius= aradius;
	}

	/**
	 * @return the value of udb.alert
	 * 
	 */
	public String getAlert()
	{
		return alert;
	}

	/**
	 * @param alert
	 *            the value for udb.alert
	 * 
	 */
	public void setAlert(String alert)
	{
		this.alert= alert;
	}

	/**
	 * @return the value of udb.signupdate
	 * 
	 */
	public Date getSignupdate()
	{
		return signupdate;
	}

	/**
	 * @param signupdate
	 *            the value for udb.signupdate
	 * 
	 */
	public void setSignupdate(Date signupdate)
	{
		this.signupdate= signupdate;
	}

	/**
	 * @return the value of udb.lastvotetime
	 * 
	 */
	public Date getLastvotetime()
	{
		return lastvotetime;
	}

	/**
	 * @param lastvotetime
	 *            the value for udb.lastvotetime
	 * 
	 */
	public void setLastvotetime(Date lastvotetime)
	{
		this.lastvotetime= lastvotetime;
	}

	/**
	 * @return the value of udb.numvotes
	 * 
	 */
	public Integer getNumvotes()
	{
		return numvotes;
	}

	/**
	 * @param numvotes
	 *            the value for udb.numvotes
	 * 
	 */
	public void setNumvotes(Integer numvotes)
	{
		this.numvotes= numvotes;
	}

	/**
	 * @return the value of udb.karma
	 * 
	 */
	public Integer getKarma()
	{
		return karma;
	}

	/**
	 * @param karma
	 *            the value for udb.karma
	 * 
	 */
	public void setKarma(Integer karma)
	{
		this.karma= karma;
	}

	/**
	 * @return the value of udb.agreed
	 * 
	 */
	public String getAgreed()
	{
		return agreed;
	}

	/**
	 * 
	 * @param agreed
	 *            * the value for udb.agreed
	 * 
	 */
	public void setAgreed(String agreed)
	{
		this.agreed= agreed;
	}

	/**
	 * @return the value of udb.tgpref
	 * 
	 */
	public String getTgpref()
	{
		return tgpref;
	}

	/**
	 * @param tgpref
	 *            the value for udb.tgpref
	 * 
	 */
	public void setTgpref(String tgpref)
	{
		this.tgpref= tgpref;
	}

	/**
	 * @return the value of udb.pmpref
	 * 
	 */
	public String getPmpref()
	{
		return pmpref;
	}

	/**
	 * @param pmpref
	 *            the value for udb.pmpref
	 * 
	 */
	public void setPmpref(String pmpref)
	{
		this.pmpref= pmpref;
	}

	/**
	 * @return the value of udb.pmsmsaddr
	 * 
	 */
	public String getPmsmsaddr()
	{
		return pmsmsaddr;
	}

	/**
	 * @param pmsmsaddr
	 *            the value for udb.pmsmsaddr
	 * 
	 */
	public void setPmsmsaddr(String pmsmsaddr)
	{
		this.pmsmsaddr= pmsmsaddr;
	}

	/**
	 * @return the value of udb.global_moderator
	 * 
	 */
	public Integer getGlobalModerator()
	{
		return global_moderator;
	}

	/**
	 * @param global_moderator
	 *            the value for udb.global_moderator
	 * 
	 */
	public void setGlobalModerator(Integer globalModerator)
	{
		this.global_moderator= globalModerator;
	}

	/**
	 * @return the value of udb.logged_site
	 * 
	 */
	public String getLoggedSite()
	{
		return logged_site;
	}

	/**
	 * @param logged_site
	 *            the value for udb.logged_site
	 * 
	 */
	public void setLoggedSite(String loggedSite)
	{
		this.logged_site= loggedSite;
	}

	/**
	 * @return the value of udb.newsletter
	 * 
	 */
	public String getNewsletter()
	{
		return newsletter;
	}

	/**
	 * @param newsletter
	 *            the value for udb.newsletter
	 * 
	 */
	public void setNewsletter(String newsletter)
	{
		this.newsletter= newsletter;
	}

	/**
	 * @return the value of udb.email_conf
	 * 
	 */
	public String getEmailConf()
	{
		return email_conf;
	}

	/**
	 * @param email_conf
	 *            the value for udb.email_conf
	 * 
	 */
	public void setEmailConf(String emailConf)
	{
		this.email_conf= emailConf;
	}

	/**
	 * @return the value of udb.status
	 * 
	 */
	public String getStatus()
	{
		return status;
	}

	/**
	 * @param status
	 *            the value for udb.status
	 * 
	 */
	public void setStatus(String status)
	{
		this.status= status;
	}

	/**
	 * @return the value of udb.lastkarma
	 * 
	 */
	public Integer getLastkarma()
	{
		return lastkarma;
	}

	/**
	 * @param lastkarma
	 *            the value for udb.lastkarma
	 * 
	 */
	public void setLastkarma(Integer lastkarma)
	{
		this.lastkarma= lastkarma;
	}

	/**
	 * @return the value of udb.sip
	 * 
	 */
	public String getSip()
	{
		return sip;
	}

	/**
	 * @param sip
	 *            the value for udb.sip
	 * 
	 */
	public void setSip(String sip)
	{
		this.sip= sip;
	}

	/**
	 * @return the value of udb.loginfailures
	 * 
	 */
	public Integer getLoginfailures()
	{
		return loginfailures;
	}

	/**
	 * @param loginfailures
	 *            the value for udb.loginfailures
	 * 
	 */
	public void setLoginfailures(Integer loginfailures)
	{
		this.loginfailures= loginfailures;
	}

	/**
	 * @return the value of udb.modapplydate
	 * 
	 */
	public Date getModapplydate()
	{
		if (modapplydate == null)
		{
			return new GregorianCalendar(1970, 0, 1, 0, 0, 0).getTime();
		}
		return modapplydate;
	}

	/**
	 * @param modapplydate
	 *            the value for udb.modapplydate
	 * 
	 */
	public void setModapplydate(Date modapplydate)
	{
		this.modapplydate= modapplydate;
	}

	/**
	 * @return the value of udb.lastapitime
	 * 
	 */
	public Date getLastapitime()
	{
		if (lastapitime == null)
		{
			return new GregorianCalendar(1970, 0, 1, 0, 0, 0).getTime();
		}
		return lastapitime;
	}

	/**
	 * @param lastapitime
	 *            the value for udb.lastapitime
	 * 
	 */
	public void setLastapitime(Date lastapitime)
	{
		this.lastapitime= lastapitime;
	}

	/**
	 * @return the value of udb.lastwebtime
	 * 
	 */
	public Date getLastwebtime()
	{
		if (lastwebtime == null)
		{
			return new GregorianCalendar(1970, 0, 1, 0, 0, 0).getTime();
		}
		return lastwebtime;
	}

	/**
	 * @param lastwebtime
	 *            the value for udb.lastwebtime
	 * 
	 */
	public void setLastwebtime(Date lastwebtime)
	{
		this.lastwebtime= lastwebtime;
	}

	/**
	 * @return the value of udb.confirmdate
	 * 
	 */
	public Date getConfirmdate()
	{
		return confirmdate;
	}

	/**
	 * @param confirmdate
	 *            the value for udb.confirmdate
	 * 
	 */
	public void setConfirmdate(Date confirmdate)
	{
		this.confirmdate= confirmdate;
	}

	/**
	 * @return the value of udb.confirmmethod
	 * 
	 */
	public String getConfirmmethod()
	{
		return confirmmethod;
	}

	/**
	 * @param confirmmethod
	 *            the value for udb.confirmmethod
	 * 
	 */
	public void setConfirmmethod(String confirmmethod)
	{
		this.confirmmethod= confirmmethod;
	}

	public String toString()
	{

		StringBuffer sb= new StringBuffer();
		sb.append("id= " + id + " ");
		sb.append(" name= " + name + " ");
		sb.append(" uname= " + uname + " ");
		sb.append(" pwd= " + pwd + " ");
		sb.append(" newPassword= " + new_Password + " ");
		sb.append(" mPassword= " + m_Password + " ");
		sb.append(" level= " + level + " ");
		sb.append(" info= " + info + " ");
		sb.append(" aradius= " + aradius + " ");
		sb.append(" alert= " + alert + " ");
		if (signupdate != null)
		{
			sb.append(" signupdate= " + signupdate.toString() + " ");
		}
		else
		{
			sb.append(" signupdate= null");
		}
		if (lastvotetime != null)
		{
			sb.append(" lastvotetime= " + lastvotetime.toString() + " ");
		}
		else
		{
			sb.append(" lastvotetime= null");
		}
		sb.append(" numvotes= " + numvotes + " ");
		sb.append(" karma= " + karma + " ");
		sb.append(" agreed= " + agreed + " ");
		sb.append(" tgpref= " + tgpref + " ");
		sb.append(" pmpref= " + pmpref + " ");
		sb.append(" pmsmsaddr= " + pmsmsaddr + " ");
		sb.append(" global_moderator= " + global_moderator + " ");
		sb.append(" loggedSite= " + logged_site + " ");
		sb.append(" newsletter= " + newsletter + " ");
		sb.append(" emailConf= " + email_conf + " ");
		sb.append(" status= " + status + " ");
		sb.append(" lastkarma= " + lastkarma + " ");
		sb.append(" sip= " + sip + " ");
		sb.append(" loginfailures= " + loginfailures + " ");
		if (modapplydate != null)
		{
			sb.append(" modapplydate= " + modapplydate.toString() + " ");
		}
		else
		{
			sb.append(" modapplydate= null");
		}
		if (lastapitime != null)
		{
			sb.append(" lastapitime= " + lastapitime.toString() + " ");
		}
		else
		{
			sb.append(" lastapitime= null");
		}
		if (lastwebtime != null)
		{
			sb.append(" lastwebtime= " + lastwebtime.toString() + " ");
		}
		else
		{
			sb.append(" lastwebtime= null");
		}
		if (confirmdate != null)
		{
			sb.append(" confirmdate= " + confirmdate.toString() + " ");
		}
		else
		{
			sb.append(" confirmdate= null");
		}
		sb.append(" confirmmethod= " + confirmmethod);

		return sb.toString();
	}
	
	
	

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Udb other = (Udb) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		}
		else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
		
}