<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>User-service-impl</display-name>

	<listener>
		<listener-class>org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
	</listener>
	<listener>
		<listener-class>org.jboss.resteasy.plugins.spring.SpringContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:service-app-context.xml
			classpath:nvtsfw-core-monitoring-service-context.xml
		</param-value>
	</context-param>
	
	<!-- define default mappings between 'file extension : media type' -->
	<context-param>
        <param-name>resteasy.media.type.mappings</param-name>
        <param-value>html : text/html, json : application/json, xml : application/xml, js : application/javascript, txt : text/plain</param-value>
    </context-param>
    
    <context-param>
		<param-name>resteasy.logger.type</param-name>
		<param-value>LOG4J</param-value>
	</context-param>
	
	<!-- this is the entry point to our application / REST service -->
	<servlet>
		<servlet-name>User-service</servlet-name>
		<servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>User-service</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
	
	<!-- use the default servlet for static content such as .xsd files -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>
			
	<!-- monitoring filter required for resource monitoring -->
	<filter>
		<filter-name>requestStatusMonitoringFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>requestStatusMonitoringFilter</filter-name>
		<servlet-name>User-service</servlet-name>
	</filter-mapping>
		
	
</web-app>